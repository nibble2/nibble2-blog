<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>내가 정리한 개념 on nibble2</title>
    <link>https://nibble2.github.io/categories/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/</link>
    <description>Recent content in 내가 정리한 개념 on nibble2</description>
    <image>
      <url>https://nibble2.github.io/papermod-cover.png</url>
      <link>https://nibble2.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 16 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nibble2.github.io/categories/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/node/node.js/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/node/node.js/</guid>
      <description>Node.js란? Node.js란 자바스크립트 런타임 환경 및 라이브러리 입니다. 서버 측 웹 응용 프로그램을 만드는 데 사용됩니다.
자바스크립트 런타임 이제는 JS가 컴파일, 인터프리터 언어라고 할 수 없다. 왜냐하면 엔진에 따라 다르기도 하고, 컴파일과 인터프리터 둘다 쓰이기도 한다.
노드는 자바스크립트 런타임이다. 런타임은 특정 언어로 만든 프로그램들을 실행할 수 있는 환경을 뜻합니다.
노드는 v8과 더불어 libuv라는 라이브러리를 사용합니다.
libuv 라이브러리는 노드의 특성인 이벤트 기반, 논블로킹 I/O 모델을 구현하고 있습니다. 노드는 스스로를 이벤트 기반, 논블로킹 I/O 모델을 사용해 가볍고 효율적이라고 표현했다.</description>
    </item>
    
    <item>
      <title>함수 선언문보다 함수 표현식을 권장하는 이유</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8%EB%B3%B4%EB%8B%A4-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%EA%B6%8C%EC%9E%A5%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8%EB%B3%B4%EB%8B%A4-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%EA%B6%8C%EC%9E%A5%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0/</guid>
      <description>함수 표현식</description>
    </item>
    
    <item>
      <title>Javascript 비동기</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/%EB%B9%84%EB%8F%99%EA%B8%B0/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/%EB%B9%84%EB%8F%99%EA%B8%B0/</guid>
      <description>Javascript</description>
    </item>
    
    <item>
      <title>클로저(Closure) 발표 자료</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/closure/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/closure/</guid>
      <description>클로저 발표 내용</description>
    </item>
    
    <item>
      <title>Docker로 MongoDB를 사용할 때 주의할 점</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/docker/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/docker/</guid>
      <description>상황 모든 프로그램은 보통 포트도 함께 설정이 된다. 나의 Demon MongoDB:27017(local) vs Docker MongoDB:27017가 충돌되어 DB에 접속하지 못하는 상황이 발생하였다.
 docker-compose.yml 포트 변경    변경된 포트를 사용하여 docker mongoDB로 접근한다.
  나의 local mongoDB PORT : 27017
  도커 MONGODB PORT로 접속하는 포트 : 27018
 주의할점은 도커네의 몽고디비 포트는 27017이다     토론  과연 도커(Docker) 컨테이너를 통해 데이터베이스를 운영하는 게 좋은 방법일까?</description>
    </item>
    
    <item>
      <title>CSR, SSR, SSG, ISG 우리는 어떤 것을 사용해야할까?</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/csr-vs-ssr/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/csr-vs-ssr/</guid>
      <description>SSR vs CSR</description>
    </item>
    
    <item>
      <title>RDBMS vs NOSQL</title>
      <link>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/rdbms-vs-nosql/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nibble2.github.io/posts/archives/%EB%82%B4%EA%B0%80-%EC%A0%95%EB%A6%AC%ED%95%9C-%EA%B0%9C%EB%85%90/rdbms-vs-nosql/</guid>
      <description>RDBMS(Relational Database Management System)  관계형 데이터베이스를 생성하고 수정, 삭제 관리할 수 있는 소프트웨어
  SQL(Structured Query Language) 데이터베이스에서 사용하는 쿼리 언어 RDB(Relational Database)란 관계형 데이터 모델에 기초를 둔 데이터 베이스 데이터는 정해진(엄격한) 데이터 스키마 (= structure)를 따라 데이터베이스 테이블에 저장됩니다. 데이터는 관계를 통해서 연결된 여러개의 테이블에 분산됩니다.   1. 엄격한 스키마 데이터는 테이블(table)에 레코드(record)로 저장되며, 각 테이블에는 명확하게 정의된 구조(structure)가 있습니다. (구조란 어떤 데이터가 테이블에 들어가고 어떤 데이터가 그렇지 않을지를 정의하는 필드(field) 집합을 가르킵니다.</description>
    </item>
    
  </channel>
</rss>
